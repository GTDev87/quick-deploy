#!/bin/bash

# Argument = -i ip-address -d dockerfile -p port

usage()
{
  cat << EOF
usage: $0 options

This script deploys dockerfile code to IP address and port.

OPTIONS:
  -i      IP Address
  -d      Path To Dockerfile
  -p      Port
  -k      Path To SSH Key (Optional Default $HOME/.ssh/id_rsa saves after the firest time)
EOF
}

IP=
DOCKER_FILE_LOCATION=
PORT=
SSH_KEY=$HOME/.ssh/id_rsa

while getopts i:d:p:k:: OPTION; do
  case $OPTION in
    i)
      IP=$OPTARG
      ;;
    d)
      DOCKER_FILE_LOCATION=$OPTARG
      ;;
    p)
      PORT=$OPTARG
      ;;
    k)
      SSH_KEY=$OPTARG
      ;;
    ?)
      usage
      exit
      ;;
   esac
done

if [[ -z $IP ]] || [[ -z $DOCKER_FILE_LOCATION ]] || [[ -z $PORT ]]
then
  usage
  exit 1
fi

echo "IP" = $IP
echo "DOCKER_FILE_LOCATION" = $DOCKER_FILE_LOCATION
echo "PORT" = $PORT
echo "SSH_KEY" = $SSH_KEY

MACHINE_NAME=$IP-machine
IMAGE_NAME=$IP`echo ${DOCKER_FILE_LOCATION} | tr '[:upper:]' '[:lower:]' | sed "s/\//_/g"`

docker-machine create  --driver generic --generic-ip-address $IP $MACHINE_NAME --generic-ssh-key $SSH_KEY
eval "$(docker-machine env $MACHINE_NAME)"
docker build --rm -t $IMAGE_NAME $DOCKER_FILE_LOCATION
docker run -d -p $PORT:80 $IMAGE_NAME