#!/bin/bash

# Argument = -i ip-address -d dockerfile -p port

usage()
{
  cat << EOF
usage: $0 options

This script deploys dockerfile code to IP address and port.

OPTIONS:
  -m      Machine Name
  -d      Path To Dockerfile
  -p      Port
  -e      Enviornment Variables to set (-e key1=value1 -e key2=value2)
  -f      folder to include
EOF
}

MACHINE_NAME=
DOCKER_FILE_LOCATION=
PORT=
ENV_COMMAND=
FILE_INCLUDE=
IMPORT_FOLDER=/.tmp

while getopts m:d:p:e:f:k:: OPTION; do
  case $OPTION in
    m)
      MACHINE_NAME=$OPTARG
      ;;
    d)
      DOCKER_FILE_LOCATION=$OPTARG
      ;;
    p)
      PORT=$OPTARG
      ;;
    e)
      ENV_COMMAND+="-e "$OPTARG" "
      ;;
    f)
      FILE_INCLUDE=$OPTARG
      ;;
    ?)
      usage
      exit
      ;;
   esac
done

if [[ -z $MACHINE_NAME ]] || [[ -z $DOCKER_FILE_LOCATION ]] || [[ -z $PORT ]]
then
  usage
  exit 1
fi

echo "MACHINE_NAME" = $MACHINE_NAME
echo "DOCKER_FILE_LOCATION" = $DOCKER_FILE_LOCATION
echo "PORT" = $PORT
echo "ENV_COMMAND" = $ENV_COMMAND
echo "FILE_INCLUDE" = $FILE_INCLUDE

IMAGE_NAME=$MACHINE_NAME`echo ${DOCKER_FILE_LOCATION} | tr '[:upper:]' '[:lower:]' | sed "s/\//_/g"`

echo "IMAGE_NAME" = $IMAGE_NAME

docker-machine create  --driver virtualbox $MACHINE_NAME 
eval "$(docker-machine env $MACHINE_NAME)"
docker build --rm -t $IMAGE_NAME $DOCKER_FILE_LOCATION
docker run -d -p $PORT:80 -e 'HOST_PORT='$PORT -e 'IMPORT_FOLDER='IMPORT_FOLDER $ENV_COMMAND $IMAGE_NAME
docker-machine ssh $MACHINE_NAME "sudo mkdir -p $IMPORT_FOLDER"
docker-machine ssh $MACHINE_NAME "sudo chown docker:staff $IMPORT_FOLDER"
if [[ -n $FILE_INCLUDE ]]; then
  docker-machine scp $FILE_INCLUDE $MACHINE_NAME:$IMPORT_FOLDER
fi
echo IP = `docker-machine ip $MACHINE_NAME`
